<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>http on 他山笨石</title>
    <link>https://shiqstone.github.io/tags/http/</link>
    <description>Recent content in http on 他山笨石</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Sat, 03 Aug 2019 18:40:38 +0000</lastBuildDate><atom:link href="https://shiqstone.github.io/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP基础知识</title>
      <link>https://shiqstone.github.io/post/http-101/</link>
      <pubDate>Sat, 03 Aug 2019 18:40:38 +0000</pubDate>
      
      <guid>https://shiqstone.github.io/post/http-101/</guid>
      <description>了解HTTP基础知识，对日常工作中web开发和问题排查有很大的帮助，在没有一定的项目经验之前学习这些基础知识会有一些困扰，但有过一定开发经验，尤其是遇到问题碰过几次壁之后再回来学习这些相关内容就会有不一样的感受了
1. URI和URL 这里我们先了解一下URI和URL，URI的全称为Uniform Resource Identifier，即统一资源标志符，URL的全称为Universal Resource Locator，即统一资源定位符。
举例来说，github.com/favicon.ico是GitHub的网站图标链接，它是一个URL，也是一个URI。即有这样的一个图标资源，我们用URL/URI来唯一指定了它的访问方式，这其中包括了访问协议https、访问路径（/即根目录）和资源名称favicon.ico。通过这样一个链接，我们便可以从互联网上找到这个资源，这就是URL/URI。
URL是URI的子集，也就是说每个URL都是URI，但不是每个URI都是URL。那么，怎样的URI不是URL呢？URI还包括一个子类叫作URN，它的全称为Universal Resource Name，即统一资源名称。URN只命名资源而不指定如何定位资源，比如urn:isbn:0451450523指定了一本书的ISBN，可以唯一标识这本书，但是没有指定到哪里定位这本书，这就是URN。
但在目前互联网中，几乎所有的URI都是URL，长久以后，我们一般都把网页链接统称为URL。
2. URL完整格式 在平常对前端同学的面试中，我都会让面试者解释他们对URL的了解，很多人都只能简单的说域名和请求路径两部分，但这明显是不完整的，也正因为对URL格式理解的不完整，导致在遇到一些特殊格式链接地址时手足无措。
一个完整的URL链接格式
scheme://[username[:password]@]hostname[:port]/path/[;parameter]/[?query][#fragment] 各部分说明如下，其中括号部分为可选项
字段 名 称 说明 scheme 协议 该链接地址使用的协议，常用的协议是http和https，其他ftp, file, nfs, sftp 等也都是合法的协议 :// 分隔符 以此符号分隔协议和其他部分 hostname 主机名 指明链接所在服务器的地址，可以是域名或IP地址 hort 端口 提供服务的端口，针对不同协议有默认端口，如http对应80端口，https对应443端口，也可以自定义 path 路径 网络资源在服务器中的指定路径 ;parameter 参数 可用于向服务器传入请求参数，用键值对表示，现在比较少见这种传递参数方式 ?query 查询 用?将url的路径部分和其他部分区分开，大多服务端框架也习惯将get参数拼做query方式传递；注意：由于可能有异常导致出现多个问号，服务端会做一定的容错处理，截取后一段query的情况比较常见 #fragment 片段 一小片或者一部分资源的名字。引用对象时，不会将frag字段传送给服务器。这个字段是在客户端内部使用的。通过字符”#”将其与URL的其余部分分隔开来。静态页面通常用片段配合锚点直接定位到页面的某个部分 username[:password]@ 用户名密码 有一些服务（ftp）需要提供用户名密码验证，可以采用这种方式 3. HTTP和HTTPS HTTP全称是Hyper Text Transfer Protocol，用于从网络传输超文本数据到本地浏览器的传送协议，目前广泛使用的是HTTP 1.1版本
HTTPS的全称是Hyper Text Transfer Protocol over Secure Socket Layer，是以安全为目标的HTTP通道，简单讲是HTTP的安全版，即HTTP下加入SSL层，简称为HTTPS。
HTTPS的安全基础是SSL，主要作用是通过建立一个信息安全通道来保证数据传输安全，并且可以通过安全证书保证网站的真实性；HTTPS是未来发展的方向，越来越多的网站都要求将HTTPS作为标准服务。</description>
    </item>
    
  </channel>
</rss>
