<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Go on 他山笨石</title>
    <link>https://shiqstone.github.io/tags/go/</link>
    <description>Recent content in Go on 他山笨石</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Tue, 02 Aug 2022 00:15:51 +0000</lastBuildDate><atom:link href="https://shiqstone.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go语言开发效率的小技巧</title>
      <link>https://shiqstone.github.io/post/tips-for-developing-efficiency-in-go-language/</link>
      <pubDate>Tue, 02 Aug 2022 00:15:51 +0000</pubDate>
      
      <guid>https://shiqstone.github.io/post/tips-for-developing-efficiency-in-go-language/</guid>
      <description>前言 每门语言都有自己的语法糖，像java的语法糖就有方法变长参数、拆箱与装箱、枚举、for-each等等，Go语言也不例外，其也有自己的语法糖，掌握这些语法糖可以助我们提高开发的效率，所以本文就来介绍一些Go语言的语法糖。
可变长参数 Go语言允许一个函数把任意数量的值作为参数，Go语言内置了...操作符，在函数的最后一个形参才能使用...操作符，使用它必须注意如下事项：
可变长参数必须在函数列表的最后一个； 把可变长参数当切片来解析，可变长参数没有没有值时就是nil切片 可变长参数的类型必须相同 func test(a int, b ...int) { return } 既然我们的函数可以接收可变长参数，那么我们在传参的时候也可以传递切片使用...进行解包转换为参数列表，append 方法就是最好的例子：
var sarr []int sarr = append(sarr, 1) sarr = append(sarr, sarr...) append方法定义如下：
// slice = append(slice, elem1, elem2) // slice = append(slice, anotherSlice...) func append(slice []Type, elems ...Type) []Type 声明不定长数组 数组是有固定长度的，我们在声明数组时一定要声明长度，因为数组在编译时就要确认好其长度，但是有些时候对于想偷懒的我，就是不想写数组长度，有没有办法让他自己算呢？当然有，使用&amp;hellip;操作符声明数组时，你只管填充元素值，其他的交给编译器自己去搞就好了；
a := [...]int{1, 3, 5} // 数组长度是3，等同于 a := [3]{1, 3, 5} 有时我们想声明一个大数组，但是某些index想设置特别的值也可以使用&amp;hellip;操作符搞定：
a := [...]int{1: 20, 999: 10} // 数组长度是100, 下标1的元素值是20，下标999的元素值是10，其他元素值都是0 init函数 Go语言提供了先于main函数执行的init函数，初始化每个包后会自动执行init函数，每个包中可以有多个init函数，每个包中的源文件中也可以有多个init函数，加载顺序如下：</description>
    </item>
    
    <item>
      <title>尝试使用Go截取视频生成缩略图</title>
      <link>https://shiqstone.github.io/post/try-golang-snapshot-video-thumb/</link>
      <pubDate>Fri, 31 Jan 2020 18:44:26 +0000</pubDate>
      
      <guid>https://shiqstone.github.io/post/try-golang-snapshot-video-thumb/</guid>
      <description>1 基本命令 使用ffmpeg截取视频生成图片，原始命令为
ffmpeg -i src.mp4 -y -f mjpeg -ss 3 -t 1 -s 80x44 dist.jpg 2 简单封装 package main import ( &amp;#34;bytes&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;os/exec&amp;#34; ) func main() { filename := &amp;#34;test.mp4&amp;#34; width := 288 height := 512 output := &amp;#34;output.jpg&amp;#34; cmd := exec.Command(&amp;#34;ffmpeg&amp;#34;, &amp;#34;-i&amp;#34;, filename, &amp;#34;-vframes&amp;#34;, &amp;#34;1&amp;#34;, &amp;#34;-s&amp;#34;, fmt.Sprintf(&amp;#34;%dx%d&amp;#34;, width, height), &amp;#34;-f&amp;#34;, &amp;#34;singlejpeg&amp;#34;, output) var buffer bytes.Buffer cmd.Stdout = &amp;amp;buffer if cmd.Run() != nil { panic(&amp;#34;could not generate frame&amp;#34;) } } 3 查询数据库 增加从mysql数据库读取视频路径</description>
    </item>
    
  </channel>
</rss>
